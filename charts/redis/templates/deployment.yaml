apiVersion: apps/v1
kind: {{ .Values.master.kind }}
metadata:
  name: {{ include "redis.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    app.kubernetes.io/component: master
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.master.count }}
  {{- if eq .Values.master.kind "StatefulSet" }}
  serviceName: {{ include "redis.headlessServiceName" . }}
  updateStrategy:
    type: {{ .Values.master.updateStrategy.type }}
  {{- else }}
  strategy:
    type: RollingUpdate
  {{- end }}
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: master
  template:
    metadata:
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: master
        {{- with .Values.master.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.master.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.commonAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "redis.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.master.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.master.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.master.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.master.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.master.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: redis
          image: {{ include "redis.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.master.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.master.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          command:
            - redis-server
          args:
            - /etc/redis/redis.conf
            {{- if .Values.auth.enabled }}
            - --requirepass
            - $(REDIS_PASSWORD)
            {{- else }}
            - --protected-mode
            - "no"
            {{- end }}
            - --port
            - "{{ .Values.master.containerPorts.redis }}"
            {{- range .Values.master.extraFlags }}
            - {{ . | quote }}
            {{- end }}
          env:
            {{- if .Values.auth.enabled }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "redis.secretName" . }}
                  key: {{ include "redis.secretPasswordKey" . }}
            {{- end }}
            {{- if .Values.master.extraEnvVars }}
            {{- toYaml .Values.master.extraEnvVars | nindent 12 }}
            {{- end }}
          ports:
            - name: redis
              containerPort: {{ .Values.master.containerPorts.redis }}
          {{- if .Values.master.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.master.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.master.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.master.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.master.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.master.livenessProbe.failureThreshold }}
            exec:
              command:
                - redis-cli
                {{- if .Values.auth.enabled }}
                - -a
                - $(REDIS_PASSWORD)
                {{- end }}
                - ping
          {{- end }}
          {{- if .Values.master.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.master.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.master.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.master.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.master.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.master.readinessProbe.failureThreshold }}
            exec:
              command:
                - redis-cli
                {{- if .Values.auth.enabled }}
                - -a
                - $(REDIS_PASSWORD)
                {{- end }}
                - ping
          {{- end }}
          {{- if .Values.master.resources }}
          resources: {{- toYaml .Values.master.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: redis-data
              mountPath: {{ .Values.master.persistence.path }}
            - name: config
              mountPath: /etc/redis
            {{- if .Values.master.extraVolumeMounts }}
            {{- toYaml .Values.master.extraVolumeMounts | nindent 12 }}
            {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "redis.configmapName" . }}
        {{- if not .Values.master.persistence.enabled }}
        - name: redis-data
          emptyDir: {}
        {{- else if .Values.master.persistence.existingClaim }}
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ .Values.master.persistence.existingClaim }}
        {{- end }}
        {{- if .Values.master.extraVolumes }}
        {{- toYaml .Values.master.extraVolumes | nindent 8 }}
        {{- end }}
  {{- if and .Values.master.persistence.enabled (not .Values.master.persistence.existingClaim) (eq .Values.master.kind "StatefulSet") }}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          {{- include "redis.selectorLabels" . | nindent 10 }}
          app.kubernetes.io/component: master
      spec:
        accessModes:
          {{- range .Values.master.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.master.persistence.size | quote }}
        {{- if or .Values.master.persistence.storageClass .Values.global.storageClass }}
        storageClassName: {{ coalesce .Values.master.persistence.storageClass .Values.global.storageClass | quote }}
        {{- end }}
  {{- end }}